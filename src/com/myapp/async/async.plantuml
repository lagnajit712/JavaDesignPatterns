@startuml

title __ASYNC's Class Diagram__\n

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.Email {
          - id : long
          + Email()
          + Email()
          + getId()
          + setId()
          + toString()
      }
    }
  }
  

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.TestAsync {
          {static} + main()
          {static} - sleep()
      }
    }
  }
  

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.TestAsyncAccept {
          {static} + main()
          {static} - sleep()
      }
    }
  }
  

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.TestAsyncExceptionHandling {
          {static} + main()
          {static} - sleep()
      }
    }
  }
  

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.TestAsyncMultipleBranch {
          {static} + main()
          {static} - sleep()
      }
    }
  }
  

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.TestAsyncTrigger {
          {static} + main()
          {static} - sleep()
      }
    }
  }
  

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.TestCompletableFuture {
          {static} + main()
      }
    }
  }
  

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.TestCompletableFutureTrigger {
          {static} + main()
      }
    }
  }
  

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.TestCompletableFutureWithSupplier {
          {static} + main()
      }
    }
  }
  

  namespace  {
    namespace om.myapp.async {
      class com.myapp.async.User {
          - id : long
          + User()
          + User()
          + getId()
          + setId()
          + toString()
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
